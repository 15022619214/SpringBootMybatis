<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spb.boot.mappers.TestinfoMapper" >
  <resultMap id="BaseResultMap" type="com.spb.boot.beans.Testinfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="number" property="number" jdbcType="BIGINT" />
    <result column="lifecycle" property="lifecycle" jdbcType="CHAR" />
    <result column="dekes" property="dekes" jdbcType="DOUBLE" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.spb.boot.beans.Testinfo" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, create_time, update_time, number, lifecycle, dekes
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from test
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from test
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.spb.boot.beans.Testinfo" >
    insert into test (id, name, create_time, 
      update_time, number, lifecycle, 
      dekes, description)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{number,jdbcType=BIGINT}, #{lifecycle,jdbcType=CHAR}, 
      #{dekes,jdbcType=DOUBLE}, #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.spb.boot.beans.Testinfo" >
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="lifecycle != null" >
        lifecycle,
      </if>
      <if test="dekes != null" >
        dekes,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null" >
        #{number,jdbcType=BIGINT},
      </if>
      <if test="lifecycle != null" >
        #{lifecycle,jdbcType=CHAR},
      </if>
      <if test="dekes != null" >
        #{dekes,jdbcType=DOUBLE},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spb.boot.beans.Testinfo" >
    update test
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=BIGINT},
      </if>
      <if test="lifecycle != null" >
        lifecycle = #{lifecycle,jdbcType=CHAR},
      </if>
      <if test="dekes != null" >
        dekes = #{dekes,jdbcType=DOUBLE},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.spb.boot.beans.Testinfo" >
    update test
    set name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      number = #{number,jdbcType=BIGINT},
      lifecycle = #{lifecycle,jdbcType=CHAR},
      dekes = #{dekes,jdbcType=DOUBLE},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spb.boot.beans.Testinfo" >
    update test
    set name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      number = #{number,jdbcType=BIGINT},
      lifecycle = #{lifecycle,jdbcType=CHAR},
      dekes = #{dekes,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>